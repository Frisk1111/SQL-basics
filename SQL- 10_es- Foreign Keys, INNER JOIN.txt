1. Using the INGREDIENT and MEAL tables, write a query to return the name of all meals that contain garlic.

2. Using the INGREDIENT and MEAL tables, write a query to return the number of meals with vegetarian ingredients.

3. Using the INGREDIENT and MEAL tables, write a query to return the names of meals that have at least 1 gluten free ingredient and at least 1 vegan ingredient.
 
4. Using the INGREDIENT and MEAL tables, write a query to return the average number of ingredients per meal.

5. Using the INGREDIENT and MEAL tables, write a query to return the names of meals that have more than 3 ingredients.

Questo da fare PRIMA  dell'esercizio in se'!
Così le aggiungo a ingredients e lo ridefinisco nel meal dandogli do un nuovo valore! 

CREATE TABLE meal (
	NAME VARCHAR(255),
	PRICE DOUBLE,
	CALORIES INT,
	MEAL_ID INT auto_increment,
       PRIMARY KEY(MEAL_ID)
);

INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Grilled Chicken Sandwich', 8.99, 400);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Lentil Dahl', 12.99, 600);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Pesto Pasta', 10.99, 550);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Spaghetti Bolognese', 12.99, 600);
INSERT INTO main.meal
(NAME, PRICE, CALORIES)
VALUES('Steak and Mash', 19.99, 800);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Sushi Platter', 15.99, 700);

CREATE TABLE ingredient (
	NAME VARCHAR(255),
	CONTAINS_LACTOSE BOOLEAN,
	VEGETARIAN BOOLEAN,
	VEGAN BOOLEAN,
	GLUTEN_FREE BOOLEAN
	
);

ALTER TABLE INGREDIENTS
ADD COLUMN MEAL_ID int REFERENCES MEAL(MEAL_ID);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Grilled Chicken', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Bread', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Lettuce', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Tomato', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Mayo', TRUE, TRUE, FALSE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Lentils', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Ginger', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Cumin', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Turmeric', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pasta', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pesto', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pine Nuts', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Basil', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Parmesan Cheese', TRUE, FALSE, FALSE, FALSE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Spaghetti', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Ground Beef', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Tomato Sauce', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Steak', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Mashed Potatoes', FALSE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Butter', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Salt', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Pepper', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Sushi Rice', FALSE, TRUE, TRUE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Nori', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Tuna', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Salmon', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Avocado', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Wasabi', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Soy Sauce', FALSE, TRUE, TRUE, TRUE);



#PARTE ESERCIZIO:
#1.
#così mi ritornano le portate che contengono l'aglio!
select * from  meal m 
inner join ingredient i on i.MEAL_ID  = m.MEAL_ID 
where i.NAME  = 'garlic' ;

#2 non l'ho capita fanculo bastardi di merda morite
SELECT * FROM MEAL M
INNER JOIN INGREDIENTS I ON I.MEAL_ID = M.MEAL_ID
COUNT(*)FROM M.MEAL_NAME
WHERE I.VEGETARIAN; <-- si cista!

#3.
#così mi ritornarno le portate che hanno almeno 
#un ingrediente senza glunite e uno vegano-
select 
concat('portata: ', m.NAME ) as meals
from  meal m 
inner join ingredient i on i.MEAL_ID  = m.MEAL_ID 
where i.GLUTEN_FREE and i.VEGAN 
group by m.NAME ;

#4 non capita
SELECT * FROM MEAL M
INNER JOIN INGREDIENTS I ON I.MEAL_ID = M.MEAL_ID
AVG(I)
GROUP BY M.MEAL_NAME; <-- non lo so se sia giusto....

#5
#per trovare le portate con più di  3 ingredienti!!!
select 
concat('portata con più di 3 igredienti: ', m.NAME) as meals, 
count(*) as num_of_ingredients
from ingredient i
inner join meal m  on m.MEAL_ID  = i.MEAL_ID 
group by m.NAME 
having num_of_ingredients > 3;



#           ----------------
#            seconda parte
#           ----------------



# Using the following table definitions, write an inner join for the two tables:

CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT,
    NAME VARCHAR(255),
    ADDRESS VARCHAR(255)
);


CREATE TABLE ORDER (
    ORDER_ID INT,
    CUSTOMER_ID INT,
    ORDER_DATE DATE,
    TOTAL_COST DECIMAL(10,2)
);


ALTER TABLE CUSTOMER
ADD CONSTRAINT PRIMARY KEY(CUSTOMER_ID);

ALTER TABLE ORDER
ADD CONSTRAINT PRIMARY KEY(CUSTOMER_ID);



#INNER JOIN MANUALE:

SELECT * FROM CUSTOMER C, ORDER O
WHERE C.CUSTOMER_ID  = O.CUSTOMER_ID;

#INNER JOIN NORMALE:

SELECT * FROM ORDER O
INNER JOIN CUSTOMER C ON C.CUSTOMER_ID  = O.CUSTOMER_ID;


 -------------------


Using the following table definitions, write an inner join for the two tables:

CREATE TABLE PRODUCT (
    PRODUCT_ID INT,
    NAME VARCHAR(255),
    PRICE DECIMAL(10,2)
);

CREATE TABLE INVENTORY (
    PRODUCT_ID INT,
    STORE_ID INT,
    QUANTITY INT
);


#come ho fatto
ALTER TABLE CUSTOMER
ADD constraint PRIMARY KEY(PRODUCT_ID);


ALTER TABLE INVENTORY
ADD constraint PRIMARY KEY(PRODUCT_ID);

#INNER JOIN MANUALE:

SELECT * FROM PRODUCT P, INVENTORY I
WHERE P.PRODCUT_ID = I.PRODUCT_ID;


#INNER JOIN NORMALE:

SELECT * FROM INVENTORY I
INNER JOIN PRODUCT P ON P.PRODUCT_ID = I.PRODUCT_ID;