#ricreo la tabella meal con i valori che GREG aveva messo durante i video

CREATE TABLE meal (
	NAME VARCHAR(255),
	PRICE DOUBLE,
	CALORIES INT,
	MEAL_ID INT auto_increment,
       PRIMARY KEY(MEAL_ID)
);

INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Grilled Chicken Sandwich', 8.99, 400);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Lentil Dahl', 12.99, 600);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Pesto Pasta', 10.99, 550);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Spaghetti Bolognese', 12.99, 600);
INSERT INTO main.meal
(NAME, PRICE, CALORIES)
VALUES('Steak and Mash', 19.99, 800);
INSERT INTO meal
(NAME, PRICE, CALORIES)
VALUES('Sushi Platter', 15.99, 700);

#ricreo la tabella ingredienti
CREATE TABLE ingredient (
	NAME VARCHAR(255),
	CONTAINS_LACTOSE BOOLEAN,
	VEGETARIAN BOOLEAN,
	VEGAN BOOLEAN,
	GLUTEN_FREE BOOLEAN	
);

#così non solo agigungo la colonna meal_id
#ma la rendo collegata a quella della tabella meal !!

ALTER TABLE INGREDIENTS
ADD COLUMN MEAL_ID int REFERENCES MEAL(MEAL_ID);


#aggiunto i nuovi ingredienti!
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Grilled Chicken', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Bread', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Lettuce', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Tomato', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (1, 'Mayo', TRUE, TRUE, FALSE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Lentils', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Ginger', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Cumin', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (2, 'Turmeric', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pasta', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pesto', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Pine Nuts', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Basil', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (3, 'Parmesan Cheese', TRUE, FALSE, FALSE, FALSE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Spaghetti', FALSE, TRUE, FALSE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Ground Beef', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Onion', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Garlic', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (4, 'Tomato Sauce', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Steak', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Mashed Potatoes', FALSE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Butter', TRUE, TRUE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Salt', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (5, 'Pepper', FALSE, TRUE, TRUE, TRUE);

INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Sushi Rice', FALSE, TRUE, TRUE, FALSE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Nori', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Tuna', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Salmon', FALSE, FALSE, FALSE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Avocado', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Wasabi', FALSE, TRUE, TRUE, TRUE);
INSERT INTO INGREDIENT (MEAL_ID, NAME, CONTAINS_LACTOSE, VEGETARIAN, VEGAN, GLUTEN_FREE)
VALUES (6, 'Soy Sauce', FALSE, TRUE, TRUE, TRUE);


#       ---------------------
#       prima parte esercizio
#       ---------------------

#1.
#così mi ritornano le portate che contengono l'aglio!
select * from  meal m 
inner join ingredient i on i.MEAL_ID  = m.MEAL_ID 
where i.NAME  = 'garlic' ;

#2  così conto le portate che hanno
 # ingredienti vegetariani
select count(distinct meal.meal_id) as MEAL_WITH_VEGATARIAN_INGREDIENTS
from meal m
inner join ingredient i  on m.MEAL_ID = i.MEAL_ID
where i.vegetarian;


#3.
#così mi ritornano le portate che hanno almeno 
#un ingrediente senza glunite e uno vegano-
select 
concat('portata: ', m.NAME ) as meals
from  meal m 
inner join ingredient i on i.MEAL_ID  = m.MEAL_ID 
where i.GLUTEN_FREE and i.VEGAN 
group by m.NAME ;


#4
select avg(NUM_INGREDIENTS) as AVG_NUM_INGREDIENTS
  from (
  select meal.MEAL_ID, count(INGREDIENT.NAME) as NUM_INGREDIENTS
  from meal m
  inner join ingredient i on m.MEAL_ID = i.MEAL_ID
  group by m.MEAL_ID
  ) as COUNTING_QUERY;

#5
#per trovare le portate con più di  3 ingredienti!!!
select 
concat('portata con più di 3 igredienti: ', m.NAME) as meals, 
count(*) as num_of_ingredients
from ingredient i
inner join meal m  on m.MEAL_ID  = i.MEAL_ID 
group by m.NAME 
having num_of_ingredients > 3;



#         -----------------------
#         seconda parte esercizio
#         -----------------------



# Using the following table definitions, write an inner join for the two tables:

CREATE TABLE CUSTOMER (
    CUSTOMER_ID INT,
    NAME VARCHAR(255),
    ADDRESS VARCHAR(255)
);


CREATE TABLE ORDER (
    ORDER_ID INT,
    CUSTOMER_ID INT,
    ORDER_DATE DATE,
    TOTAL_COST DECIMAL(10,2)
);


ALTER TABLE CUSTOMER
ADD CONSTRAINT PRIMARY KEY(CUSTOMER_ID);

ALTER TABLE ORDER
ADD CONSTRAINT PRIMARY KEY(CUSTOMER_ID);


#INNER JOIN
SELECT * FROM ORDER O
INNER JOIN CUSTOMER C ON C.CUSTOMER_ID  = O.CUSTOMER_ID;


 -------------------


Using the following table definitions, write an inner join for the two tables:

CREATE TABLE PRODUCT (
    PRODUCT_ID INT,
    NAME VARCHAR(255),
    PRICE DECIMAL(10,2)
);

CREATE TABLE INVENTORY (
    PRODUCT_ID INT,
    STORE_ID INT,
    QUANTITY INT
);


#come ho fatto
ALTER TABLE CUSTOMER
ADD constraint PRIMARY KEY(PRODUCT_ID);


ALTER TABLE INVENTORY
ADD constraint PRIMARY KEY(PRODUCT_ID);


#INNER JOIN

SELECT * FROM INVENTORY I
INNER JOIN PRODUCT P ON P.PRODUCT_ID = I.PRODUCT_ID;
